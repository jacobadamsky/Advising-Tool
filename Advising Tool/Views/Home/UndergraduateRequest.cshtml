@using static Advising_Tool.Views.Home.Functions
@using System.Text.Json

@model UndergraduateSchedule

<head>
    <script src="~/js/gradscript.js"></script>
    <link rel="stylesheet" href="~/css/gradreq.css" asp-append-version="true" />
    <link rel="icon" href="./favicon.ico" />
    <title>Graduate Schedule - Course Selection</title>
</head>
<body>
    <div class="degreeinfo">
        <div class="creditcounter" data-credits="0">
            0 credits
        </div>
        <div class="label">
            <h class="title">Area of Study</h><br />
            <i>@GetStudyAreaName(Model.AREA!) (@Model.AREA)</i>
        </div>
        <div class="label">
            <h class="title">Degree Name</h><br />
            <i>@Model.LONGNAME (@Model.DEGREE)</i>
        </div>
    </div>

    <div class="separator"></div>
    <div class="butselbar">
        <div class="butsel" active="true" onclick="switchVisibleSection('.courseselection', this); window.document.title = 'Graduate Schedule - Course Selection';">
            Course Selection
        </div>
        @if (Model.FINAL != null && Model.FINAL != "" && Model.FINAL != "[]")
        {
            <div class="butsel" active="false" onclick="switchVisibleSection('.finalproject', this); window.document.title = 'Graduate Schedule - Final Project';">
                Final Project
            </div>
        }
        <div class="butsel" active="false" onclick="switchVisibleSection('.selectedcourses', this); window.document.title = 'Graduate Schedule - Selected Courses';">
            Selected Courses
        </div>
        @if (Model.NOTES != "" && Model.NOTES != null)
        {
            <div class="butsel" active="false" onclick="switchVisibleSection('.notes', this); window.document.title = 'Graduate Schedule - Degree Notes';">
                Degree Notes
            </div>
        }

    </div>
    <div class="selectedcourses subarea" hidden>
        <div class="scheduleyear selectedsubdiv">
            <div class="year" data-hidechildren="false">
                <label class="yearlabel" onclick="this.parentElement.querySelectorAll('.semesterdiv').forEach(t => t.toggleAttribute('hidden'))">Year 1</label>
                <div class="semesterdiv">
                    <label class="semesterlabel">Fall Semester</label>
                    <div class="semester">
                        <div class="semesteradd" onclick="addSelectedCourse(this)">
                            Add Selected Course
                        </div>
                        <div class="semestercourses"></div>
                    </div>
                </div>
                <div class="semesterdiv">
                    <label class="semesterlabel">Spring Semester</label>
                    <div class="semester">
                        <div class="semesteradd" onclick="addSelectedCourse(this)">
                            Add Selected Course
                        </div>
                        <div class="semestercourses"></div>
                    </div>
                </div>
                <button class="removeyear" onclick="removeYear(this)" hidden>Remove Year</button>
                <button class="addyear" onclick="addYear(this)">Add Year</button>
            </div>
        </div>
        <div class="verticalspacer"></div>
        <div class="scheduleview selectedsubdiv">
            <button class="download" onclick="downloadSchedule()">Download Schedule</button>
            <br />
            <div class="selectedfinal" hidden>
                <label class="selectedlabel">Selected Final Project</label>
            </div>
            <label class="selectedlabel">Selected Courses</label>
            <div class="courseoptions">
            </div>
            <label class="prevlabel">Previously Taken Courses</label>
            <div class="prevcourses">
                <div class="prevcourse">
                    <button class="removeprev" onclick="removeParent(this, true)" disabled>-</button>
                    <input type="text" onchange="removeParent(this, false)" />
                    <button class="addnext" onclick="duplicateSelf(this)">+</button>
                </div>
            </div>
        </div>
    </div>

    <div class="finalproject subarea" hidden>
        @if (Model.FINAL != null && Model.FINAL != "" && Model.FINAL != "[]")
        {
            foreach (JsonElement finalOption in ParseJson<JsonElement>(Model.FINAL!).EnumerateArray())
            {
                <div class="finaloption">
                    <input type="checkbox" onclick="updateFinalOptions(this); setFinalProj();" />
                    <label class="finaloptionlabel">@finalOption.GetProperty("NAME")</label>
                    @foreach (JsonElement finalSection in finalOption.GetProperty("SECTIONS").EnumerateArray())
                    {
                        int MIN = finalSection.GetProperty("MIN").GetInt32();
                        int MAX = finalSection.GetProperty("MAX").GetInt32();
                        int NUM = finalSection.GetProperty("NUM").GetInt32();
                        <div class="finalsection" data-min=@MIN data-max=@MAX data-num=@NUM>
                            @if (NUM != 0)
                            {
                                <label class="finalcreditlabel">
                                    <b>Times Taken: </b>@NUM
                                </label>
                                @foreach (JsonElement finalCourseGroup in finalSection.GetProperty("COURSES").EnumerateArray())
                                {
                                    <div class="finalcoursegroup">
                                        @foreach (JsonElement finalCourse in finalCourseGroup.EnumerateArray())
                                        {
                                            string AREA = finalCourse.GetProperty("AREA").ToString(), ID = finalCourse.GetProperty("ID").ToString();
                                            var CMIN = finalCourse.GetProperty("MIN").ToString();
                                            var CMAX = finalCourse.GetProperty("MAX").ToString();
                                            <div class="finalcourse" data-area=@AREA data-id=@ID data-min=@CMIN data-max=@CMAX>
                                                <input type="checkbox" disabled oninput="setFinalProj(); updateGlobalCredits(this);" />
                                                <b>
                                                    @AREA @ID - @GetCourseInfo(AREA, ID).NAME<br />
                                                </b>
                                                @if (CMIN != CMAX)
                                                {
                                                    <text>
                                                        @CMIN - @CMAX
                                                    </text>
                                                }
                                                else
                                                {
                                                    if (CMIN == "1")
                                                    {
                                                        <text>
                                                            @CMIN time
                                                        </text>
                                                    }
                                                    else
                                                    {
                                                        <text>
                                                            @CMIN times
                                                        </text>
                                                    }
                                                }
                                            </div>
                                        }
                                    </div>
                                }
                            }
                            else
                            {
                                <label class="finalcreditlabel">
                                    <b>Credits: </b>
                                    @if (MIN == MAX)
                                    {
                                        <text>
                                            @MIN
                                        </text>
                                    }
                                    else
                                    {
                                        <text>
                                            @MIN - @MAX
                                        </text>
                                    }
                                </label>
                                @foreach (JsonElement finalCourseGroup in finalSection.GetProperty("COURSES").EnumerateArray())
                                {
                                    <div class="finalcoursegroup">
                                        @foreach (JsonElement finalCourse in finalCourseGroup.EnumerateArray())
                                        {
                                            string AREA = @finalCourse.GetProperty("AREA").ToString(), ID = @finalCourse.GetProperty("ID").ToString();
                                            var CMIN = finalCourse.GetProperty("MIN").ToString();
                                            var CMAX = finalCourse.GetProperty("MAX").ToString();
                                            <div class="finalcourse" data-area=@AREA data-id=@ID data-min=@CMIN data-max=@CMAX>
                                                <input type="checkbox" disabled oninput="setFinalProj();" onclick="updateGlobalCredits(this);" />
                                                <b>
                                                    @AREA @ID - @GetCourseInfo(AREA, ID).NAME <br />
                                                </b>
                                                @if (CMIN != CMAX)
                                                {
                                                    <text>
                                                        @CMIN - @CMAX credits
                                                    </text>
                                                }
                                                else
                                                {
                                                    if (CMIN == "1")
                                                    {
                                                        <text>
                                                            @CMIN credit
                                                        </text>
                                                    }
                                                    else
                                                    {
                                                        <text>
                                                            @CMIN credits
                                                        </text>
                                                    }
                                                }
                                            </div>
                                            if (!finalCourse.Equals(finalCourseGroup.EnumerateArray().Last()))
                                            {
                                                <div class="spacer"></div>
                                            }
                                        }
                                    </div>
                                }
                            }
                        </div>
                    }
                </div>
            }
        }
    </div>

    <div class="notes subarea">
        @if (Model.NOTES != null && Model.NOTES != "")
        {
            @Model.NOTES!.Replace("-", "\n- ")
        }
    </div>
    <div class="courseselection subarea">
        <div class="selectionbuttons">
            @{
                if (Model.COURSES != null && Model.COURSES != "" && Model.COURSES != "[]")
                {
                    <div class="selectionbutton" onclick="switchVisibleSubsection('.courses', this);">
                        General Courses
                    </div>
                }
                if (Model.ELECTIVE != null && Model.ELECTIVE != "" && Model.ELECTIVE != "[]")
                {
                    JsonElement elective = ParseJson<JsonElement>(Model.ELECTIVE!);
                    if (elective.GetProperty("FREE").ToString() != "0" || elective.GetProperty("RELATED").ToString() != "0")
                    {
                        <div class="selectionbutton" onclick="switchVisibleSubsection('.electives', this)">
                            Electives
                        </div>
                    }
                }
            }

        </div>

        <div class="courses coursesubsect" hidden>
            @if (Model.COURSES != "" && Model.COURSES != null && Model.COURSES != "[]")
            {
                foreach (JsonElement courseArea in ParseJson<JsonElement>(Model.COURSES!).EnumerateArray())
                {
                    var credits = courseArea.GetProperty("CREDITS");
                    <div class="coursesarea" data-credits=@credits data-current="0">
                        <label class="arealabel">
                            <label class="minimize" onclick="minimizeCourses(this)" hidecourses="false">-</label>
                            @courseArea.GetProperty("AREA") - @credits credits
                        </label>
                        <div class="areacourses">
                            @{
                                var groups = courseArea.GetProperty("OPTIONS").EnumerateArray();
                                foreach (JsonElement courseGroup in groups)
                                {
                                    <div class="coursegroup">
                                        @foreach (JsonElement course in courseGroup.EnumerateArray())
                                        {
                                            Course thisCourse = GetCourseInfo(course.GetProperty("AREA").ToString(), course.GetProperty("ID").ToString());
                                            <div class="course" id="@thisCourse.AREA@thisCourse.ID" data-credit="@thisCourse.CREDITS" data-prereq="@thisCourse.PREREQ" data-rec="@thisCourse.REC">
                                                <input type="checkbox" class="coursecheckbox" oninput="hideDuplicate(this); modifyCourseScheduling(this); updateCreditCount(this); disableCoursesInGroup(this);" />
                                                <label class="courselabel" onclick="this.parentElement.querySelector('.courseinfo').toggleAttribute('hidden')">
                                                    @thisCourse.AREA @thisCourse.ID - @thisCourse.NAME
                                                </label>
                                                <div class="courseinfo" hidden>
                                                    <label class="creditlabel">
                                                        @{
                                                            string creditStr = "";
                                                            creditStr = thisCourse.CREDITS == "1" ? "(1 credit)" : (thisCourse.CREDITS == "0" || thisCourse.CREDITS == "" || thisCourse.CREDITS == null) ? "(0 credits)" : $"({thisCourse.CREDITS} credits)";
                                                            <text>@creditStr</text>
                                                        }
                                                    </label>
                                                    <p class="description">
                                                        @thisCourse.DESCRIPTION
                                                    </p>
                                                    <p class="recprereq">
                                                        @if (thisCourse.PREREQ != "[]" && thisCourse.PREREQ != "" && thisCourse.PREREQ != null)
                                                        {
                                                            <label class="prereqlabel">Prerequisites</label>
                                                            <div class="prereqs">
                                                                @foreach (JsonElement group in ParseJson<JsonElement>(thisCourse.PREREQ!).EnumerateArray())
                                                                {
                                                                    <div class="prereqgroup">
                                                                        @{
                                                                            var str = String.Join(" / ", group.EnumerateArray().Select(p => p.GetProperty("AREA").ToString() + p.GetProperty("ID").ToString()));
                                                                            @str
                                                                        }
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                        @if (thisCourse.REC != "[]" && thisCourse.REC != "" && thisCourse.REC != null)
                                                        {
                                                            <label>Recommended Background</label>
                                                            <div class="recs">
                                                                @foreach (JsonElement group in ParseJson<JsonElement>(thisCourse.REC!).EnumerateArray())
                                                                {
                                                                    <div class="recgroup">
                                                                        @{
                                                                            var str = String.Join(" / ", group.EnumerateArray().Select(p => p.GetProperty("AREA").ToString() + p.GetProperty("ID").ToString()));
                                                                            @str
                                                                        }
                                                                    </div>
                                                                }
                                                            </div>
                                                        }
                                                    </p>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    if (courseGroup.ToString() != groups.Last().ToString())
                                    {
                                        <div class="spacer"></div>
                                    }
                                }
                            }
                        </div>
                    </div>
                }
            }
        </div>

        <div class="electives coursesubsect" hidden>
            @{
                if (Model.ELECTIVE != null && Model.ELECTIVE != "" && Model.ELECTIVE != "[]")
                {
                    JsonElement ELECTIVE = ParseJson<JsonElement>(Model.ELECTIVE!);
                    int FREE = int.Parse(ELECTIVE.GetProperty("FREE").ToString()), RELATED = int.Parse(ELECTIVE.GetProperty("RELATED").ToString()), APPROVED = int.Parse(ELECTIVE.GetProperty("APPROVED").ToString());
                    if (FREE > 0)
                    {
                        <div class="freeelectives electivearea">
                            <label class="arealabel">Free Electives: @FREE credits</label>
                            <div class="courses" data-credit="@FREE" data-current="0">
                                @foreach (Course thisCourse in GetCatalog().Where(course => !course.NAME!.ToLower().Contains("thesis") && !course.NAME!.ToLower().Contains("dissertation") && !course.NAME!.ToLower().Contains("special topics") && !course.NAME!.ToLower().Contains("capstone") && !course.NAME!.ToLower().Contains("qualifying") && !course.NAME!.ToLower().Contains("internship")))
                                {
                                    <div class="course" id="@thisCourse.AREA@thisCourse.ID" data-credit="@thisCourse.CREDITS" data-prereq="@thisCourse.PREREQ" data-rec="@thisCourse.REC">
                                        <input type="checkbox" class="coursecheckbox" oninput="hideDuplicate(this); modifyCourseScheduling(this); updateCreditCount(this);" />
                                        <label class="courselabel" onclick="this.parentElement.querySelector('.courseinfo').toggleAttribute('hidden')">
                                            @thisCourse.AREA @thisCourse.ID - @thisCourse.NAME
                                        </label>
                                        <div class="courseinfo" hidden>
                                            <label class="creditlabel">
                                                @{
                                                    string creditStr = "";
                                                    creditStr = thisCourse.CREDITS == "1" ? "(1 credit)" : (thisCourse.CREDITS == "0" || thisCourse.CREDITS == "" || thisCourse.CREDITS == null) ? "(0 credits)" : $"({thisCourse.CREDITS} credits)";
                                                    <text>@creditStr</text>
                                                }
                                            </label>
                                            <p class="description">
                                                @thisCourse.DESCRIPTION
                                            </p>
                                            <p class="recprereq">
                                                @if (thisCourse.PREREQ != "[]" && thisCourse.PREREQ != "" && thisCourse.PREREQ != null)
                                                {
                                                    <label class="prereqlabel">Prerequisites</label>
                                                    <div class="prereqs">
                                                        @foreach (JsonElement group in ParseJson<JsonElement>(thisCourse.PREREQ!).EnumerateArray())
                                                        {
                                                            <div class="prereqgroup">
                                                                @{
                                                                    var str = String.Join(" / ", group.EnumerateArray().Select(p => p.GetProperty("AREA").ToString() + p.GetProperty("ID").ToString()));
                                                                    @str
                                                                }
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                                @if (thisCourse.REC != "[]" && thisCourse.REC != "" && thisCourse.REC != null)
                                                {
                                                    <label>Recommended Background</label>
                                                    <div class="recs">
                                                        @foreach (JsonElement group in ParseJson<JsonElement>(thisCourse.REC!).EnumerateArray())
                                                        {
                                                            <div class="recgroup">
                                                                @{
                                                                    var str = String.Join(" / ", group.EnumerateArray().Select(p => p.GetProperty("AREA").ToString() + p.GetProperty("ID").ToString()));
                                                                    @str
                                                                }
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                            </p>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    if (RELATED > 0)
                    {
                        <div class="relatedelectives electivearea">
                            <label class="arealabel">Related Electives: @RELATED credits</label>
                            <div class="courses" data-credit="@FREE" data-current="0">
                                @foreach (Course thisCourse in GetCatalog().Where(course => course.AREA == Model.AREA))
                                {
                                    <div class="course" id="@thisCourse.AREA@thisCourse.ID" data-credit="@thisCourse.CREDITS" data-prereq="@thisCourse.PREREQ" data-rec="@thisCourse.REC">
                                        <input type="checkbox" class="coursecheckbox" oninput="hideDuplicate(this); modifyCourseScheduling(this); updateCreditCountTwo(this);" />
                                        <label class="courselabel" onclick="this.parentElement.querySelector('.courseinfo').toggleAttribute('hidden')">
                                            @thisCourse.AREA @thisCourse.ID - @thisCourse.NAME
                                        </label>
                                        <div class="courseinfo" hidden>
                                            <label class="creditlabel">
                                                @{
                                                    string creditStr = "";
                                                    creditStr = thisCourse.CREDITS == "1" ? "(1 credit)" : (thisCourse.CREDITS == "0" || thisCourse.CREDITS == "" || thisCourse.CREDITS == null) ? "(0 credits)" : $"({thisCourse.CREDITS} credits)";
                                                    <text>@creditStr</text>
                                                }
                                            </label>
                                            <p class="description">
                                                @thisCourse.DESCRIPTION
                                            </p>
                                            <p class="recprereq">
                                                @if (thisCourse.PREREQ != "[]" && thisCourse.PREREQ != "" && thisCourse.PREREQ != null)
                                                {
                                                    <label class="prereqlabel">Prerequisites</label>
                                                    <div class="prereqs">
                                                        @foreach (JsonElement group in ParseJson<JsonElement>(thisCourse.PREREQ!).EnumerateArray())
                                                        {
                                                            <div class="prereqgroup">
                                                                @{
                                                                    var str = String.Join(" / ", group.EnumerateArray().Select(p => p.GetProperty("AREA").ToString() + p.GetProperty("ID").ToString()));
                                                                    @str
                                                                }
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                                @if (thisCourse.REC != "[]" && thisCourse.REC != "" && thisCourse.REC != null)
                                                {
                                                    <label>Recommended Background</label>
                                                    <div class="recs">
                                                        @foreach (JsonElement group in ParseJson<JsonElement>(thisCourse.REC!).EnumerateArray())
                                                        {
                                                            <div class="recgroup">
                                                                @{
                                                                    var str = String.Join(" / ", group.EnumerateArray().Select(p => p.GetProperty("AREA").ToString() + p.GetProperty("ID").ToString()));
                                                                    @str
                                                                }
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                            </p>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                }
            }
        </div>
    </div>
</body>
<script>
    window.sessionStorage.setItem("firstTime", "true");
    window.addEventListener("beforeunload", function (e) {
        window.localStorage.removeItem("query");
    }, false);

    document.querySelector(".selectionbutton").click();

    var count = 0;
    document.querySelectorAll(".butsel").forEach(button => {
        if (!button.hidden) {
            count++;
        }
    });

    var percent = 100 / count;
    document.querySelectorAll(".butsel").forEach(button => {
        button.style = `width: ${percent}%;`
    });

    var count2 = 0;
    document.querySelectorAll(".selectionbutton").forEach(button => {
        if (!button.hidden) {
            count2++;
        }
    });

    var percent2 = 100 / count2;
    document.querySelectorAll(".selectionbutton").forEach(button => {
        button.style = `width: ${percent2}%;`
    });

    var percent3 = 90 / document.querySelectorAll(".electivearea").length;
    document.querySelectorAll(".electivearea").forEach(area => {
        area.style = `width:${percent3}%`
    });
    document.querySelector(".butsel").click();
</script>